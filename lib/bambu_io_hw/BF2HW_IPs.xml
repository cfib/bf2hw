<?xml version="1.0"?>
<!--
  BF2HW
  Copyright (C) 2017  Christian Fibich

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 3 of the License, or
  (at your option) any later version.
-->


<technology>
  <library>
    <name>BF2HW_FU</name>
    <cell>
      <name>bambu_putchar</name>
      <!-- bounded="0" makes the FU blocking -->
      <operation operation_name="bambu_putchar" bounded="0" />
      <circuit>
        <component_o id="bambu_putchar">
          <description>This component is a FIFO stdout interface</description>
          <copyright>Copyright (C) 2017 Christian Fibich</copyright>  
          <authors>Christian Fibich</authors> 
          <license>GPLv3</license>
          <structural_type_descriptor id_type="bambu_putchar"/>
          <port_o id="clock" dir="IN" is_clock="1">
            <structural_type_descriptor type="BOOL" size="1"/>
          </port_o>
         <port_o id="reset" dir="IN">
            <structural_type_descriptor type="BOOL" size="1"/>
          </port_o>
          <port_o id="start_port" dir="IN">
            <structural_type_descriptor type="BOOL" size="1"/>
            <connected_objects/>
          </port_o>
          <port_o id="done_port" dir="OUT">
            <structural_type_descriptor type="BOOL" size="1"/>
            <connected_objects/>
          </port_o>
          <port_o id="c" dir="IN">
            <structural_type_descriptor type="UINT" size="8"/>
            <connected_objects/>
          </port_o>
          <port_o id="TX_ENABLE" dir="OUT" is_global="1" is_extern="1">
            <structural_type_descriptor type="BOOL" size="1" />
            <connected_objects/>
          </port_o>
          <port_o id="TX_DATA" dir="OUT" is_global="1" is_extern="1">
            <structural_type_descriptor type="UINT" size="8" />
            <connected_objects/>
          </port_o>
          <port_o id="TX_READY" dir="IN" is_global="1" is_extern="1">
            <structural_type_descriptor type="BOOL" size="1" />
            <connected_objects/>
          </port_o>
          <NP_functionality LIBRARY="bambu_putchar " VERILOG_FILE_PROVIDED="bambu_putchar.v"/>
        </component_o>
        </circuit>
      </cell>
      <cell>
      <name>bambu_getchar</name>
      <!-- bounded="0" makes the FU blocking -->
      <operation operation_name="bambu_getchar" bounded="0"/>
      <circuit>
        <component_o id="bambu_getchar">
          <description>This component is a FIFO stdin interface</description>
          <copyright>Copyright (C) 2017 Christian Fibich</copyright>  
          <authors>Christian Fibich</authors> 
          <license>GPLv3</license>
          <structural_type_descriptor id_type="bambu_getchar"/>
          <port_o id="clock" dir="IN" is_clock="1">
            <structural_type_descriptor type="BOOL" size="1"/>
          </port_o>
         <port_o id="reset" dir="IN">
            <structural_type_descriptor type="BOOL" size="1"/>
          </port_o>
          <port_o id="start_port" dir="IN">
            <structural_type_descriptor type="BOOL" size="1"/>
            <connected_objects/>
          </port_o>
          <port_o id="done_port" dir="OUT">
            <structural_type_descriptor type="BOOL" size="1"/>
            <connected_objects/>
          </port_o>
          <port_o id="return_port" dir="OUT">
            <structural_type_descriptor type="UINT" size="8"/>
            <connected_objects/>
          </port_o>
          <port_o id="RX_VALID" dir="IN" is_global="1" is_extern="1">
            <structural_type_descriptor type="BOOL" size="1" />
            <connected_objects/>
          </port_o>
          <port_o id="RX_DATA" dir="IN" is_global="1" is_extern="1">
            <structural_type_descriptor type="UINT" size="8" />
            <connected_objects/>
          </port_o>
          <NP_functionality LIBRARY="bambu_getchar " VERILOG_FILE_PROVIDED="bambu_getchar.v"/>
        </component_o>
      </circuit>
    </cell>
  </library>
</technology>
